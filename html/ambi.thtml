<!DOCTYPE html>
<html>
   <head>
      <meta charset="utf-8"/>
      <title>Ambi</title>

      <script src="/javascripts/xml_actions.js" type="text/javascript"></script>
      <script src="/javascripts/ajax_get_handler.js" type="text/javascript"></script>
      <script src="/javascripts/search_bar_autocomplete.js" type="text/javascript"></script>

      <link rel="stylesheet" href="/css/room.css">
      <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.2/css/all.css" integrity="sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr" crossorigin="anonymous">
   </head>

   <body>
      <div id="search_bar">
         <input id="search_input" type="text" placeholder="Search video" autocomplete="off">
         <button onclick="ajaxGetXmlRequest('/onclick$search_button?search_input=' + document.getElementById('search_input').value);"><i class="fa fa-search"></i></button>
         <div id="search_results"></div>
      </div>


      <div id="checkboxes">
         <div class="checkboxe">
            <p>Player</p>
            <label class="switch">
               <input type="checkbox" id="player_display_checkbox" checked onclick="ajaxGetRequestNoCallback('/onclick$player_display_checkbox?checked=' + this.checked, true)">
               <span class="slider"></span>
            </label>
         </div>

         <div id="sync_checkbox" class="checkboxe" style="display:@_DISPLAY_SYNC_CHECKBOX_@">
            <p>Sync with room</p>
            <label class="switch">
               <input type="checkbox" id="player_sync_checkbox" onclick="ajaxGetRequestNoCallback('/onclick$player_sync_checkbox?checked=' + this.checked, true)">
               <span class="slider"></span>
            </label>
         </div>
      </div>

      <div id="player"></div>

      <p>Current room video: <span id="current_room_video">@_ROOM_VIDEO_@</span></p>

      <div id="video_list_buttons">
         <button id="playlist_button" class="video_list_button" onclick="showPlaylist()">Playlist</button>
         <button id="historic_button" class="video_list_button" onclick="showHistoric()">Historic</button>
         <button id="likes_button" class="video_list_button" onclick="showLikes()">Likes</button>
      </div>

      <div id="video_list">@_VIDEO_LIST_@</div>

      <a id="back_to_top_link" href="#top">Back to top</a>

      <script>
         // Function to autocomplete search input
         autocomplete();

         // State of the Youtube player
         var playerState = "@_PLAYER_STATE_@";

         if (playerState == "no_player") {
            document.getElementById("player_display_checkbox").checked = false;
         }
         else {
            document.getElementById("player_display_checkbox").checked = true;
         }

         // State of the video list
         var videoListState = "playlist";

         // Simulate a click on the playlist button
         document.getElementById("playlist_button").click();

         // WebSocket to update playlist and current room video for all clients
         var ambiSocket = new WebSocket("ws://@_SERVER_ADDRESS_@/socket");

         ambiSocket.onmessage = function (event) {
            if (event.data == "update_playlist_request") {
               if (playerState == "end" || playerState == "error") {
                  ajaxGetRequestNoCallback ("/next_video", true);
               }
               else {
                  if (videoListState == "playlist") {
                     ajaxGetXmlRequest ("/get_video_list?source=playlist");
                  }
               }
            }
            else if (event.data == "update_historic_request") {
               if (videoListState == "historic") {
                  ajaxGetXmlRequest ("/get_video_list?source=historic");
               }
            }
            else if (event.data == "update_likes_request") {
               if (videoListState == "likes") {
                  ajaxGetXmlRequest ("/get_video_list?source=likes");
               }
            }
            else if (event.data == "update_room_current_video_request") {
               if (videoListState == "historic") {
                  ajaxGetXmlRequest ("/get_video_list?source=historic");
               }
               else if (playerState == "no_player" && videoListState == "playlist") {
                  ajaxGetXmlRequest ("/get_video_list?source=playlist");
               }

               ajaxGetXmlRequest ("/get_current_room_video");
            }
         }

         // Function called when an item of search_results or video_list is clicked
         function addToPlaylist(elm) {
            if (elm.getAttribute("name") == "search_results") {
               document.getElementById("search_input").value = "";
               document.getElementById("search_results").innerHTML = "";
            }

            ajaxGetRequestNoCallback ("/onclick$add_to_playlist?source=" + String(elm.getAttribute('name')) + "&item=" + String(elm.getAttribute('value')));
         }

         // Function called when a like/unlike button is clicked
         function addRemoveLike(elm) {
            ajaxGetRequestNoCallback ("/onclick$add_remove_like?source=" + String(elm.getAttribute('name')) + "&like=" + String(elm.innerHTML) + "&item=" + String(elm.getAttribute('value')));
         }

         function showPlaylist() {
            var videoListButtons = document.getElementsByClassName("video_list_button");
            for (var i = 0; i < videoListButtons.length; i++) {
               videoListButtons[i].className = videoListButtons[i].className.replace(" active", "");
            }

            document.getElementById("playlist_button").className += " active";
            if (videoListState != "playlist") {
               videoListState = "playlist";
               ajaxGetXmlRequest ("/get_video_list?source=playlist");
            }
         }

         function showHistoric() {
            var videoListButtons = document.getElementsByClassName("video_list_button");
            for (var i = 0; i < videoListButtons.length; i++) {
               videoListButtons[i].className = videoListButtons[i].className.replace(" active", "");
            }

            document.getElementById("historic_button").className += " active";
            if (videoListState != "historic") {
               videoListState = "historic";
               ajaxGetXmlRequest ("/get_video_list?source=historic");
            }
         }

         function showLikes() {
            var videoListButtons = document.getElementsByClassName("video_list_button");
            for (var i = 0; i < videoListButtons.length; i++) {
               videoListButtons[i].className = videoListButtons[i].className.replace(" active", "");
            }

            document.getElementById("likes_button").className += " active";
            if (videoListState != "likes") {
               videoListState = "likes";
               ajaxGetXmlRequest ("/get_video_list?source=likes");
            }
         }
      </script>

	  <script id="youtube_player_script">@_YOUTUBE_PLAYER_SCRIPT_@</script>
   </body>
</html>
