// Function to autocomplete search input
autocomplete();

// State of the Youtube player
var playerState = "@_PLAYER_STATE_@";

// Force checkboxes value to what the server expect from this client
if (playerState == "no_player") {
  document.getElementById("player_display_checkbox").checked = false;
}
else {
  document.getElementById("player_display_checkbox").checked = true;
}

@@IF@@ @_CLIENT_SYNC_@
  var clientState = "sync";
  document.getElementById("player_sync_checkbox").checked = true;
@@ELSE@@
  var clientState = "no_sync";
  document.getElementById("player_sync_checkbox").checked = false;
@@END_IF@@

// State of the song list
var songListState = "playlist";

// True when next room song is already voted
var nextRoomSongVoted = false;

// Playlist items already up voted
var upVotedItems = [];

// Simulate a click on the playlist button
document.getElementById("playlist_button").click();

// Add event listener to send chat message by pressing enter
document.getElementById("chat_message").addEventListener("keydown", function(e) {
  if (e.keyCode == 13) {
    // If the enter key is pressed
    document.getElementById("chat_send_button").click();
  }
});

// WebSocket to update room state for all clients
var ambiSocket = new WebSocket("ws://@_SERVER_ADDRESS_@/@_ROOM_NAME_@Socket");

ambiSocket.onmessage = function (event) {
  if (event.data == "update_playlist") {
    if (playerState == "end" || playerState == "error") {
      ajaxGetRequestNoCallback("/@_ROOM_NAME_@/next_client_song", true);
    }
    else {
      if (songListState == "playlist") {
        ajaxGetXmlRequest("/@_ROOM_NAME_@/get_song_list?source=playlist");
      }
    }
  }
  else if (event.data == "update_history") {
    if (songListState == "history") {
      ajaxGetXmlRequest("/@_ROOM_NAME_@/get_song_list?source=history");
    }
  }
  else if (event.data == "update_likes") {
    if (songListState == "likes") {
      ajaxGetXmlRequest("/@_ROOM_NAME_@/get_song_list?source=likes");
    }
  }
  else if (event.data == "update_suggestions") {
    ajaxGetXmlRequest("/@_ROOM_NAME_@/get_song_list?source=suggestions");
  }
  else if (event.data == "update_room_current_song") {
    if (songListState == "history") {
      ajaxGetXmlRequest("/@_ROOM_NAME_@/get_song_list?source=history");
    }
    else if (clientState == "sync" && songListState == "playlist") {
      ajaxGetXmlRequest("/@_ROOM_NAME_@/get_song_list?source=playlist");
    }

    ajaxGetXmlRequest("/@_ROOM_NAME_@/get_song_list?source=suggestions");
    ajaxGetXmlRequest("/@_ROOM_NAME_@/get_current_room_song");
    ajaxGetXmlRequest("/@_ROOM_NAME_@/get_next_song_votes");

    document.getElementById("next_room_song_button").className = "";
    nextRoomSongVoted = false;
  }
  else if (event.data == "update_nb_clients") {
    ajaxGetXmlRequest("/@_ROOM_NAME_@/get_nb_clients");
  }
  else if (event.data == "update_next_song_votes") {
    ajaxGetXmlRequest("/@_ROOM_NAME_@/get_next_song_votes");
  }
  else if (event.data == "update_chat_log") {
    ajaxGetXmlRequest("/@_ROOM_NAME_@/get_chat_log");

    if (document.getElementById("chat_popup").style.display == "" || document.getElementById("chat_popup").style.display == "none") {
      document.getElementById("chat_notification").innerHTML = "<i class='fas fa-circle'></i>";
    }
  }
  else if (event.data == "force_next_song") {
    if (clientState == "sync" && playerState != "no_player") {
      location.reload();
    }
  }
  else if (event.data == "clear_search_input") {
    document.getElementById("search_input").value = "";
  }
  else if (event.data == "show_next_room_song_button") {
    if (clientState == "sync") {
      document.getElementById("next_room_song_button").style = "display:inline";
      document.getElementById("next_room_song_votes").style = "display:inline";
      document.getElementById("player_checkbox").style = "display:block";
    }
  }
  else if (event.data == "hide_next_room_song_button") {
    if (clientState == "sync") {
      document.getElementById("next_room_song_button").style = "display:none";
      document.getElementById("next_room_song_votes").style = "display:none";
    }
    if (clientState == "sync" && playerState == "no_player") {
      document.getElementById("player_checkbox").style = "display:none";
    }
  }
}

// Called to show the settings side navigaton
function showSettings() {
  document.getElementById("settings").style.width = "230px";
}

// Called to hide the settings side navigaton
function hideSettings() {
  document.getElementById("settings").style.width = "0";
}

// Called to show the suggestions side navigaton
function showSuggestions() {
  if (window.matchMedia("(min-width: 666px)").matches) {
    document.getElementById("suggestions").style.width = "670px";
  }
  else {
    document.getElementById("suggestions").style.width = "100%";
  }
}

// Called to hide the suggestions side navigaton
function hideSuggestions() {
  document.getElementById("suggestions").style.width = "0";
}

// Function called when an item of search_results or song_list is clicked
function addToPlaylist(elm) {
  if (elm.tagName == "DIV") {
    document.getElementById("search_input").value = "";
    ajaxGetRequestNoCallback
     ("/@_ROOM_NAME_@/onclick$add_to_playlist?song_id=" + elm.getAttribute("songId") +
      "&song_title=" + encodeURIComponent(elm.getElementsByTagName("span")[0].innerHTML) +
      "&song_thumbnail_link=" + elm.getElementsByTagName("img")[0].getAttribute("src"));
  }
  else {
    var parentElm = elm.parentNode;
    ajaxGetRequestNoCallback
     ("/@_ROOM_NAME_@/onclick$add_to_playlist?song_id=" + parentElm.getAttribute("songId") +
      "&song_title=" + encodeURIComponent(parentElm.getElementsByClassName("add_playlist_buttons")[0].innerHTML) +
      "&song_thumbnail_link=" + parentElm.getElementsByTagName("img")[0].getAttribute("src"));

    parentElm.style.backgroundColor = "rgb(100, 100, 100)";
    setTimeout(function() {
      parentElm.style.backgroundColor = "rgb(0, 0, 0)";
    }, 50);
  }
}

// Function called when the next room song button is clicked
function nextRoomSong() {
  if (nextRoomSongVoted == false) {
    ajaxGetRequestNoCallback('/@_ROOM_NAME_@/onclick$next_room_song')
    document.getElementById("next_room_song_button").className = "next_room_song_button_clicked";
    nextRoomSongVoted = true;
  }
}

// Function called when a like/unlike button is clicked
function addRemoveLike(elm) {
  var parentElm = elm.parentNode;

  if (parentElm.getElementsByClassName("playlist_songs_titles").length > 0) {
    ajaxGetRequestNoCallback
     ("/@_ROOM_NAME_@/onclick$add_remove_like?song_id=" + parentElm.getAttribute("songId") +
      "&song_title=" + encodeURIComponent(parentElm.getElementsByClassName("playlist_songs_titles")[0].innerHTML) +
      "&song_thumbnail_link=" + parentElm.getElementsByTagName("img")[0].getAttribute("src") +
      "&liked=" + String(elm.innerHTML == '<i class="fas fa-heart"></i>'));
  }
  else {
    ajaxGetRequestNoCallback
     ("/@_ROOM_NAME_@/onclick$add_remove_like?song_id=" + parentElm.getAttribute("songId") +
      "&song_title=" + encodeURIComponent(parentElm.getElementsByClassName("add_playlist_buttons")[0].innerHTML) +
      "&song_thumbnail_link=" + parentElm.getElementsByTagName("img")[0].getAttribute("src") +
      "&liked=" + String(elm.innerHTML == '<i class="fas fa-heart"></i>'));
  }
}

// Function called when a remove from playlist button is clicked
function removeFromPlaylist(elm) {
  ajaxGetRequestNoCallback
   ("/@_ROOM_NAME_@/onclick$remove_from_playlist?item_id=" + elm.parentNode.parentNode.getAttribute("itemId"));
}

// Function called when an up vote button is clicked
function upVote(elm) {
  if (upVotedItems.indexOf(parseInt(elm.parentNode.parentNode.getAttribute("itemId"))) == -1) {
    ajaxGetRequestNoCallback
     ("/@_ROOM_NAME_@/onclick$up_vote?item_id=" + elm.parentNode.parentNode.getAttribute("itemId"));

    upVotedItems.push(parseInt(elm.parentNode.parentNode.getAttribute("itemId")));
  }
}

// Function called when a song list selection button is clicked
function showSongList(list) {
  var songListButtons = document.getElementsByClassName("song_list_button");
  for (var i = 0; i < songListButtons.length; i++) {
    songListButtons[i].className = songListButtons[i].className.replace(" active", "");
  }

  document.getElementById(list + "_button").className += " active";
  if (songListState != list) {
    songListState = list;
    ajaxGetXmlRequest("/@_ROOM_NAME_@/get_song_list?source=" + list);
  }
}

// Function called to show chat
function showChat() {
  document.getElementById("chat_popup").style.display = "block";
  document.getElementById("chat_message").focus();
  document.getElementById("chat_notification").innerHTML = "";
}

// Function called to send a chat message
function sendChatMessage() {
  var message = document.getElementById("chat_message").value;
  if (message != "") {
    ajaxGetRequestNoCallback("/@_ROOM_NAME_@/add_chat_message?message=" + message);
    document.getElementById("chat_message").value = "";
  }
}
